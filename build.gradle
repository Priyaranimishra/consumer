task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

allprojects {
	apply from: "$rootDir/gradle/versioning.gradle"
}

//Read the environment specific configuration 
def env = project.hasProperty('env') ? project.getProperty('env') : 'test'
def configFile = file("$rootDir/gradle/config/envConfig.groovy")
def parsedConfig = new ConfigSlurper(env).parse(configFile.toURL())

//Assign the properties object to the global config object
ext.config = parsedConfig
apply plugin: 'jmeter'
buildscript {
    repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
    }
    
    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.1.1'
        classpath 'org.cloudfoundry:cf-gradle-plugin:1.1.2'
        classpath "com.github.kulya:jmeter-gradle-plugin:1.3.4-2.13"
    }
}

jmeterRun.configure {
   jmeterTestFiles = [file("src/test/jmeter/electionResult.jmx")]
        
}

def webProjects() {
    subprojects.findAll { subproject -> subproject.plugins.hasPlugin('war') }
}

gradle.projectsEvaluated {
    configure(webProjects()) {
        apply plugin: 'com.bmuschko.cargo'

        cargo {
            containerId = config.server.containerId
        port = config.server.port.toInteger()
    
            remote {
                hostname = config.server.hostname
                username = config.server.username
                password = config.server.password
            }
        }
    }
}
